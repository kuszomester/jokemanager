openapi: 3.0.1
info:
  title: JokeManager API
  description: 'For managing jokes.'  
  version: 1.0.0
servers:
- url: http://localhost:7080/jokemanager/v1
tags:
- name: joke
  description: Everything about jokes
paths:
  '/jokes':
    post:
      tags:
      - joke
      description: Upload a new joke
      operationId: addJoke
      requestBody:
        description: Joke object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JokeAddRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 9
        400:
          description: Empty or missing joke content
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  '/jokes/{id}':
    get:
      tags:
      - joke
      description: Get a joke by its id
      operationId: getJokeById
      parameters:
      - name: id
        in: path
        description: ID of joke to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JokeResponse'
        400:
          description: Invalid ID supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        404:
          description: Joke not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      tags:
      - joke
      description: Deletes a joke
      operationId: deleteJoke
      parameters:
      - name: id
        in: path
        description: Joke id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Joke deleted
        400:
          description: Invalid ID supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        404:
          description: Joke not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  '/jokes/random':
    get:
      tags:
      - joke
      description: Get a random joke from the database
      operationId: getRandomJoke
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JokeResponse'
        404:
          description: Joke database is empty
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  '/jokes/chuck-norris':
    get:
      tags:
      - joke
      description: Get a random Chuch Norris joke from an external service
      operationId: getChuckNorrisJoke
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChuckNorrisJokeResponse'
        404:
          description: Joke database is empty
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        504:
          description: Chuck Norris joke API is not responding
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
   
components:
  schemas:
    JokeAddRequest:
      required:
      - content
      type: object
      properties:
        content:
          type: string
          example: | 
             Give a man a gun and he'll rob a bank......
             Give a man a bank and he'll rob everyone.
    JokeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 9
        createdAt:
          type: string
          format: date-time
          example: '2018-03-20T09:12:28Z'
        content:
          type: string
          example: | 
             Give a man a gun and he'll rob a bank......
             Give a man a bank and he'll rob everyone.
    ChuckNorrisJokeResponse:
      type: object
      properties:
        url:
          type: string
          example: 'https://api.chucknorris.io/jokes/-NBlNyx1TUyW_8lGoOkvOw'
        createdAt:
          type: string
          format: date-time
          example: '2018-03-20T09:12:28Z'
        content:
          type: string
          example: | 
             Chuck Norris invented cranberries by uprooting a cherry tree and throwing it into a farm pond.
    ErrorMessage:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          